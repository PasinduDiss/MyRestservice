
service: MyRestservice

provider:
  name: aws
  runtime: go1.x
  region: ap-southeast-2

package:
 individually: true
 exclude:
   - ./**

environment:
      DEVICES_TABLE_NAME: ${self:custom.DevicesTableName}
      iamRoleStatements: #Defines what other AWS services out lambda function can access
        - Effect: Allow # Allow access to DynamoDB tables
          Action:
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - ${self:custom.DevicesTableArn}
custom:
  DevicesTableName: Devices
  DevicesTableArn:  #ARN are addresses of deployed services in AWS space
    Fn::Join:
      - ":"
      - - arn
        - aws
        - dynamodb
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - table/${self:custom.DevicesTableName}

functions:

  create:
    handler: bin/handlers/create
    package:
     include:
       - ./bin/handlers/create
    events:
      - http:
          path: /api/devices
          method: post
          cors: true

    list:
      handler: bin/handlers/list
      package:
       include:
         - ./bin/handlers/list
      events:
        - http:
            path: /api/devices{id}
            method: get
            cors: true

resources:
  Resources:
    DevicesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.DevicesTableName}
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
